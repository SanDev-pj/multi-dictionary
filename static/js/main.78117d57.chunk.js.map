{"version":3,"sources":["components/Definations/Definations.js","data/category.js","components/Headers/Header.js","App.js","index.js"],"names":["Definations","word","category","meanings","LightMode","console","log","className","style","backgroundColor","borderRadius","src","phonetics","audio","controls","map","mean","item","definitions","def","color","definition","width","example","synonyms","s","categories","value","label","Header","setCategory","setWord","darkTheme","createTheme","palette","primary","main","type","ThemeProvider","theme","TextField","onChange","e","target","select","language","option","MenuItem","App","useState","setMeanings","setLightMode","DarkMode","withStyles","switchBase","grey","checked","track","Switch","dictionaryApi","a","axios","get","data","useEffect","height","transition","Container","maxWidth","display","flexDirection","justifyContent","position","top","right","paddingTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78117d57.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Definations.css';\r\nconst Definations = ({ word, category, meanings,LightMode }) => {\r\n    console.log(meanings)\r\n    return (\r\n        <div className=\"meanings\">\r\n           {meanings[0] && word && category === \"en\" && (\r\n        <audio\r\n          style={{ backgroundColor: \"#fff\", borderRadius: 10 }}\r\n          src={meanings[0].phonetics[0] && meanings[0].phonetics[0].audio}\r\n          controls\r\n        >\r\n          Your browser does not support the audio element.\r\n        </audio>\r\n      )}\r\n            {\r\n                word === \"\" ? (<span className=\"subTitle\">Start by typing a word in Search</span>)\r\n                    : (\r\n                        meanings.map((mean) => mean.meanings.map((item) => (\r\n                            item.definitions.map((def) => (\r\n                                <div className=\"singleMean\"\r\n                                    style={{ backgroundColor:LightMode?\"#3b5360\": \"white\", color:LightMode?\"white\": \"black\" }}\r\n                                >\r\n                                    <b>{def.definition}</b>\r\n                                    <hr style={{ backgroundColor: \"black\", width: \"100%\" }} />\r\n                                    {\r\n                                        def.example && (\r\n                                            <span>\r\n                                                <b>Example : </b>\r\n                                                {def.example}\r\n                                            </span>\r\n                                        )\r\n                                    }\r\n                                    {\r\n                                        def.synonyms && (\r\n                                            <span>\r\n                                                 <b>Synonyms : </b>\r\n                                                 {def.synonyms.map((s)=>`${s},`)}\r\n                                            </span>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        )))\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Definations\r\n","const categories = [\r\n    { value: \"English\", label: \"en\" },\r\n    { value: \"Hindi\", label: \"hi\" },\r\n    { value: \"Spanish\", label: \"es\" },\r\n    { value: \"French\", label: \"fr\" },\r\n    { value: \"Japanese\", label: \"ja\" },\r\n    { value: \"Russian\", label: \"ru\" },\r\n    { value: \"German\", label: \"de\" },\r\n    { value: \"Italian\", label: \"it\" },\r\n    { value: \"Korean\", label: \"ko\" },\r\n    { value: \"Brazilian Portuguese\", label: \"pt-BR\" },\r\n    { value: \"Arabic\", label: \"ar\" },\r\n    { value: \"Turkish\", label: \"tr\" },\r\n  ];\r\n  \r\n  export default categories;","import { createTheme, MenuItem, TextField, ThemeProvider } from '@material-ui/core'\r\nimport React from 'react'\r\nimport './Header.css'\r\nimport categories from '../../data/category'\r\n\r\nconst Header = ({ setCategory, category, word, setWord,LightMode }) => {\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: { main:LightMode?\"#000\": \"#fff\" },\r\n            type:LightMode?\"light\": 'dark',\r\n        },\r\n    });\r\n    const handleChange=(language)=>{\r\n        setCategory(language);\r\n        setWord(\"\");\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <span className=\"title\">{word ? word : \"Word Hunt\"}</span>\r\n            <div className=\"inputs\">\r\n                <ThemeProvider theme={darkTheme}>\r\n                    <TextField\r\n                        label=\"Search a Word\"\r\n                        className=\"search\"\r\n                        value={word}\r\n                        onChange={(e) => setWord(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        className=\"select\"\r\n                        select\r\n                        label=\"Language\"\r\n                        value={category}\r\n                        onChange={(e) => handleChange(e.target.value)}\r\n                    >\r\n                        {\r\n                            categories.map((option) => (\r\n                                <MenuItem key={option.label} value={option.label}>{option.value}</MenuItem>\r\n                            ))\r\n                        }\r\n\r\n                    </TextField>\r\n                </ThemeProvider>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { Container } from '@material-ui/core';\nimport { grey } from '@material-ui/core/colors';\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Definations from './components/Definations/Definations';\nimport Header from './components/Headers/Header';\nimport Switch from '@material-ui/core/Switch';\nimport { withStyles } from '@material-ui/core/styles';\n\nfunction App() {\n  const [word, setWord] = useState(\"\");\n  const [meanings, setMeanings] = useState([]);\n  const [category, setCategory] = useState(\"en\");\n  const [LightMode, setLightMode] = useState(false)\n\n  const DarkMode = withStyles({\n    switchBase: {\n      color: grey[300],\n      \"&$checked\": {\n        color: grey[500],\n      },\n    },\n    checked: {},\n    track: {},\n  })(Switch)\n\n\n  const dictionaryApi = async () => {\n    try {\n      const data = await axios.get(`https://api.dictionaryapi.dev/api/v2/entries/${category}/${word}`)\n      setMeanings(data.data)\n    } catch (error) {\n      console.log(error)\n    }\n  };\n  // console.log(meanings)\n  useEffect(() => {\n    dictionaryApi();\n  }, [word, category]);\n  return (\n    <div className=\"App\" style={{ height: '100vh', backgroundColor: LightMode ? \"#fff\" : \"#282c34\", color: LightMode ? \"black\" : \"white\",transition:\"all 0.5s linear\" }}>\n      <Container maxWidth=\"md\" style={{ display: \"flex\", flexDirection: \"column\", height: \"100vh\", justifyContent: \"space-evenly\" }}>\n        <div style={{ position: \"absolute\", top: 0, right: 15, paddingTop: 10 }}>\n          <span>{LightMode ? \"Dark\" : \"Light\"} Mode</span>\n          <DarkMode\n            checked={LightMode}\n            onChange={() => setLightMode(!LightMode)}\n          />\n        </div>\n        <Header category={category} setCategory={setCategory} word={word} setWord={setWord} LightMode={LightMode}/>\n        {meanings && (<Definations word={word} meanings={meanings} category={category} LightMode={LightMode} />)}\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}